#!/bin/bash

# if user is not root, pass all commands via sudo #
if [ $UID -ne 0 ]; then
    alias apt-get='sudo apt-get'
    alias add-apt-repository='sudo add-apt-repository'
    alias update-alternatives='sudo update-alternatives'

    alias root='sudo -i'
    alias su='sudo -i'

    alias reboot='sudo /sbin/reboot'
    alias poweroff='sudo /sbin/poweroff'
    alias halt='sudo /sbin/halt'
    alias shutdown='sudo /sbin/shutdown'
    alias service='sudo /usr/sbin/service'
fi

# Add for android work
alias alogf='adb logcat -v threadtime | tee device.log'
alias alogk='adb shell cat /proc/kmsg | tee kernel.log'
alias smsm='adb shell stop media && adb shell start media'
alias arbtdl='adb reboot download'

# ls family #
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias l.='ls -d .*'

# grep progrom info. e.g. psg bash #
alias psg='ps aux | grep -v grep | grep -i -e VSZ -e'

# make any necessary parent directories #
alias mkdir='mkdir -p'
alias cp='cp -r'

# continue the download in case of problem #
alias wget='wget -c'

# search history and grep #
alias histg='history | grep'

# easy to understand #
alias df='df -kTh'
alias du='du -kh'

# Pretty-print of some PATH variables:
alias path='echo -e ${PATH//:/\\n}'
alias libpath='echo -e ${LD_LIBRARY_PATH//:/\\n}'

# Add safety nets #
# do not delete / or prompt if deleting more than 3 files at a time #
#alias rm='rm -I --preserve-root'

# confirmation #
#alias mv='mv -i'
#alias cp='cp -i'
#alias ln='ln -i'

# Parenting changing perms on / #
#alias chown='chown --preserve-root'
#alias chmod='chmod --preserve-root'
#alias chgrp='chgrp --preserve-root'

#-------------------------------------------------------------
# Misc utilities:
#-------------------------------------------------------------
function repeat() {     # Repeat n times command.
    local i max
    max=$1; shift;
    for ((i=1; i <= max ; i++)); do  # --> C-like syntax
        eval "$@";
    done
}

function ask() {        # See 'killps' for example of use.
    echo -n "$@" '[y/n] ' ; read ans
    case "$ans" in
        y*|Y*) return 0 ;;
        *) return 1 ;;
    esac
}

#-------------------------------------------------------------
# Misc utilities:
#-------------------------------------------------------------
function up() {
    local max="$1";
    if [ -z "$max" ]; then
        max=1
    fi
    local path=$(pwd 2>/dev/null);
    for ((i=1; i <= max ; i++)); do
        path="${path}/.."
    done
    path=$(echo ${path} | sed 's,//,/,g');
    cd "${path}";
    path=$(pwd 2>/dev/null);
    #echo "cd from $OLDPWD to $path"
}

function mkcd () {
    case "$1" in
        */..|*/../)
            cd -- "$1";; # that doesn't make any sense unless the directory already exists
        /*/../*)
            (cd "${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd -- "$1";;
        /*)
            mkdir -p "$1" && cd "$1";;
        */../*)
            (cd "./${1%/../*}/.." && mkdir -p "./${1##*/../}") && cd "./$1";;
        ../*)
            (cd .. && mkdir -p "${1#.}") && cd "$1";;
        *)
            mkdir -p "./$1" && cd "./$1";;
    esac
}

# Adds some text in the terminal frame (if applicable).
function xtitle() {
    case "$TERM" in
    *term* | rxvt)
        echo -en  "\e]0;$*\a" ;;
    *)  ;;
    esac
}

# Aliases that use xtitle
alias top='xtitle Processes on $HOST && top'
alias make='xtitle Making $(basename $PWD) ; make'

# Get IP adress on ethernet.
function myip() {
    MY_IP=$(/sbin/ifconfig eth0 | awk '/inet/ { print $2 } ' | sed -e s/addr://)
    echo ${MY_IP:-"Not connected"}
}

